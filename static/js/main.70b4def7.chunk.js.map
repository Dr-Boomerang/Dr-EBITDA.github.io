{"version":3,"sources":["Home.js","TicTacToe.js","Api.js","Main.js","index.js"],"names":["Home","react_default","a","createElement","Square","props","className","onClick","value","Board","renderSquare","i","squares","Game","status","_useGlobal","useGlobal","_useGlobal2","Object","slicedToArray","history","setHistory","_useGlobal3","_useGlobal4","stepNumber","setStepNumber","_useGlobal5","_useGlobal6","xIsNext","setXIsNext","current","winner","calculateWinner","moves","map","step","move","desc","key","newHistory","slice","length","concat","handleClick","lines","_lines$i","b","c","API_URL","Api","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","temp","Axios","url","method","response","data","list","main","Math","round","setState","getData","React","Component","setGlobal","Array","fill","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","paper","background","Main","classes","_React$useState","useState","_React$useState2","toggleDrawer","navigationItems","address","label","CreateList","item","ListItem","button","react_router_dom","to","style","textDecoration","Typography","variant","color","ListItemText","primary","AppBar","position","Toolbar","IconButton","edge","aria-label","Menu_default","Drawer","open","onClose","List","react_router","exact","path","component","ReactDOM","render","src_Main","document","getElementById"],"mappings":"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","file":"static/js/main.70b4def7.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// import List from '@material-ui/core/List';\r\n// import ListItem from '@material-ui/core/ListItem';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\n\r\n// function SwipeableTemporaryDrawer() {\r\n// }\r\n\r\nfunction Home() {\r\n\r\n  // const sideList = (\r\n  //   <List>\r\n  //     <ListItem >\r\n  //       <ListItemText primary=\"hello\" />\r\n  //     </ListItem>\r\n  //   </List>\r\n  // )\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to my React Journey</h1>\r\n      <h2>Please look around!</h2>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { useGlobal } from 'reactn';\r\n\r\nimport './game.css';\r\n\r\n// Questions to Itai:\r\n// not sure if it makes sense to do a function outside the function\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction Board (props) {\r\n  function renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={props.squares[i]}\r\n        onClick={() => props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"board-row\">\r\n        {renderSquare(0)}\r\n        {renderSquare(1)}\r\n        {renderSquare(2)}\r\n      </div>\r\n      <div className=\"board-row\">\r\n        {renderSquare(3)}\r\n        {renderSquare(4)}\r\n        {renderSquare(5)}\r\n      </div>\r\n      <div className=\"board-row\">\r\n        {renderSquare(6)}\r\n        {renderSquare(7)}\r\n        {renderSquare(8)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n// Why did itai say we don't need render props?\r\n// do a quick experiment with this and see where does it lead you to\r\n\r\n\r\n\r\nfunction Game ()  {  \r\n\r\n  // does the change in the history naming makes sense.\r\n  function handleClick(i) {\r\n    const newHistory = history.slice(0, stepNumber + 1);\r\n    const current = newHistory[newHistory.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = xIsNext ? \"X\" : \"O\";\r\n    \r\n    setStepNumber(newHistory.length);\r\n    setXIsNext(!xIsNext);\r\n    setHistory(newHistory.concat([\r\n      {\r\n        squares: squares\r\n      }\r\n    ])); \r\n  }\r\n\r\n  function jumpTo(step) {\r\n    setStepNumber(step);\r\n    setXIsNext((step % 2) === 0);\r\n  }\r\n  \r\n  // Those are the variables that I want to turn global\r\n  const [history, setHistory] = useGlobal('history');  \r\n  const [stepNumber, setStepNumber] = useGlobal('stepNumber');\r\n  const [xIsNext, setXIsNext] = useGlobal('xIsNext');\r\n\r\n  // Why is it being printed twice?\r\n  // Figure out how the next bug was introduced.\r\n  \r\n  // The current refers to the current board:\r\n  const current = history[stepNumber];\r\n  const winner = calculateWinner(current.squares);\r\n\r\n  const moves = history.map((step, move) => {\r\n    const desc = move ?\r\n      'Go to move #' + move :\r\n      'Go to game start';\r\n    return (\r\n      <li key={move}>\r\n        <button onClick={() => jumpTo(move)}>{desc}</button>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  let status;\r\n  if (winner) {\r\n    status = \"Winner: \" + winner;\r\n  } else {\r\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game-board\">\r\n        <Board\r\n          squares={current.squares}\r\n          onClick={i => handleClick(i)}\r\n        />\r\n      </div>\r\n      <div className=\"game-info\">\r\n        <div>{status}</div>\r\n        <ol>{moves}</ol>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ========================================\r\n\r\n// ReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n\r\nexport default Game;\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","import React from 'react';\r\nimport Axios from 'axios';\r\n\r\nconst API_KEY = 'abdf2728ed681096585f6a22980eff91';\r\nconst CITY_ID = 293397;\r\nconst API_URL = `https://api.openweathermap.org/data/2.5/forecast?id=${CITY_ID}&APPID=${API_KEY}`;\r\n\r\n// Examples to figure out how the promises work\r\n// ============================================\r\n// async function testFirst () {\r\n//   await setTimeout(()=>{},1000)  \r\n//   console.log(\"I'm the first\");\r\n// }\r\n\r\n// function testSecond () {\r\n//   console.log(\"I'm the second\");\r\n// }\r\n\r\n\r\n// start like that and move it to hooks when you're done\r\n// also itai said that I should use the async and await here\r\n// how to connect the data from the API with the callback function.\r\n\r\n\r\n// When you define a new promise, then you need to send a callback function\r\n// async function test () {\r\n//   let promise = new Promise((resolve, reject) => {\r\n//     // the promise is waiting for the executor to finish working\r\n//     // here we wait using setTimeout, which uses callback to work\r\n//     setTimeout(() => reject(new Error(\"Whoops!\")), 1000)\r\n//   });\r\n  \r\n//   let result = await promise;\r\n//   console.log(result);\r\n// }\r\n\r\n\r\nclass Api extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this is the way to do that in the constructor\r\n    this.state = {\r\n      temp: 'is being calculated'\r\n    }\r\n  }\r\n  \r\n  async getData() {  \r\n    const response = await Axios({\r\n      url: API_URL,\r\n      method: 'get'\r\n    })\r\n  \r\n    let temp = response.data.list[0].main.temp - 273.15\r\n    temp = Math.round(temp * 10) / 10;\r\n    temp = temp + ' Degrees Celsius';\r\n    \r\n    this.setState({\r\n      temp: temp \r\n    })\r\n  }\r\n  \r\n  componentDidMount() {        \r\n    this.getData();        \r\n  }\r\n    \r\n  // What is going on here?\r\n  // axios.get(API_URL).then(response => {     \r\n  //   const temperature = \r\n  // })\r\n  // .then((data) => {\r\n  //   this.setState({ users: data })      \r\n  // })\r\n  //   console.log()\r\n  \r\n  \r\n  render () {\r\n    return (\r\n      <h1>The temperature in Tel Aviv is {this.state.temp}</h1>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Api;","import React from 'react';\r\nimport { Route, NavLink, HashRouter } from 'react-router-dom';\r\nimport { setGlobal } from 'reactn';\r\n\r\nimport Home from './Home';\r\nimport Game from './TicTacToe';\r\nimport Api from './Api';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\n// import Tabs from '@material-ui/core/Tabs';\r\n// import Tab from '@material-ui/core/Tab';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n// import Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n// why this one is like that?\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nsetGlobal({\r\n  history: [{\r\n    squares: Array(9).fill(null)\r\n  }],\r\n  stepNumber: 0,\r\n  xIsNext: 'true',\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,    \r\n  },  \r\n  paper: {\r\n    background: '#191919',\r\n  }\r\n}))\r\n\r\n// how to create that in a smart way instead of typing so much\r\n// how do I call the toggle drawer from here?\r\n// combine git with this friend\r\n\r\n/* <li><NavLink exact to=\"/\">Home</NavLink></li>\r\n<li></li>\r\n<li><NavLink to=\"/api\">Using API</NavLink></li>        \r\n<li><NavLink to=\"/2do\">Things to do!</NavLink></li>    */\r\n\r\nfunction Main () {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState(false);\r\n\r\n  \r\n  \r\n  \r\n  function toggleDrawer() {\r\n    setState(!state);\r\n  }\r\n\r\n  // now what I want is to make sure I don't see those annoying links around me\r\n  // think about the location of this function\r\n  const navigationItems = [\r\n    { address: '/',\r\n      label: 'Home' },\r\n    { address: '/game',\r\n      label: 'Tic Tac Toe' },\r\n    { address: '/api', \r\n      label: 'API Testing' },    \r\n  ]\r\n    \r\n  // how to do the navigation in a smart way?\r\n  // I have naes\r\n\r\n  // how to do it black.\r\n  \r\n  // can I just do it in one function?\r\n  // I need to understand\r\n  function CreateList () {\r\n    return (\r\n      navigationItems.map((item) => {        \r\n        return(\r\n          \r\n            <ListItem key={item.address} button onClick={() => toggleDrawer()}>\r\n              \r\n              <NavLink \r\n                to={item.address}\r\n                style={{textDecoration: 'none'}}\r\n              > \r\n              <Typography variant=\"h6\" color='secondary'>    \r\n                <ListItemText \r\n                  \r\n                    primary={item.label}\r\n                  \r\n                />\r\n                </Typography>  \r\n                </NavLink>\r\n              \r\n            </ListItem>\r\n          \r\n        )\r\n      })\r\n    );\r\n  }\r\n\r\n  function MenuList () {\r\n    return (\r\n      <div className=\"menuStyle\">      \r\n        <List>\r\n          <CreateList/>\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // where is the right location of the drawer? Think about it\r\n  return (\r\n    <div className={classes.root}>\r\n      <HashRouter>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton \r\n              edge=\"start\" \r\n              className={classes.menuButton} \r\n              color=\"inherit\" \r\n              aria-label=\"Menu\"\r\n              onClick={() => toggleDrawer()}\r\n            >\r\n            \r\n              <MenuIcon />\r\n              \r\n              {/* Think how to change it based on the page that I'm on\r\n              <Typography variant=\"h6\">\r\n                Hello\r\n              </Typography> */}\r\n\r\n            </IconButton>\r\n            <Drawer\r\n            classes={{ paper: classes.paper}}\r\n            open={state}\r\n            onClose={toggleDrawer}              \r\n            >\r\n            \r\n              <MenuList></MenuList>\r\n            \r\n            \r\n            </Drawer>\r\n          </Toolbar>          \r\n        </AppBar>       \r\n        <div className=\"content\">\r\n          <Route exact path =\"/\" component={Home}/>\r\n          <Route path =\"/game\" component={Game}/>\r\n          <Route path =\"/api\" component={Api}/>\r\n        </div>    \r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n\r\n\r\n\r\n// <NavLink to=\"/home\"> \r\n//               <ListItem button onClick={() => toggleDrawer()}>\r\n//                 <ListItemText primary=\"Home\"/>\r\n//               </ListItem>\r\n//             </NavLink>\r\n  \r\n//             <NavLink to=\"/game\">\r\n//               <ListItem button onClick={() => toggleDrawer()}>\r\n//                 <ListItemText primary=\"Tic Tac Toe Game\"/>\r\n//               </ListItem>\r\n//             </NavLink>\r\n  \r\n//             <NavLink to=\"/api\">\r\n//               <ListItem button onClick={() => toggleDrawer()}>\r\n//                 <ListItemText primary=\"Using API\"/>\r\n//               </ListItem>\r\n//             </NavLink>\r\n  \r\n//             <NavLink to=\"/tasks\" onClick={() => toggleDrawer()}>\r\n//               <ListItem button>\r\n//                 <ListItemText primary=\"More Things To Do\"/>\r\n//               </ListItem>\r\n//             </NavLink>","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Main from './Main';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <Main />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}